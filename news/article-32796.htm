<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://quantumultxfree.github.io/news/article-32796.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Pytorch中的Conv1d()和Conv2d()函数</title>
        <meta name="description" content="文章目录    一、Pytorch中的Conv1d()函数 二、Pytorch中的Conv2d()函数 三、Pytorch中的MaxPool1d()函数 四、pytorch中的MaxPool2d()函" />
        <link rel="icon" href="/assets/website/img/quantumultxfree/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap CSS -->
    <link href="/assets/website/css/quantumultxfree/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome CSS-->
    <link href="/assets/website/css/quantumultxfree/font-awesome.min.css" rel="stylesheet">
    <!-- Line Awesome CSS -->
    <link href="/assets/website/css/quantumultxfree/line-awesome.min.css" rel="stylesheet">
    <!-- Animate CSS-->
    <link href="/assets/website/css/quantumultxfree/animate.css" rel="stylesheet">
    <!-- Bar Filler CSS -->
    <link href="/assets/website/css/quantumultxfree/barfiller.css" rel="stylesheet">
    <!-- Flaticon CSS -->
    <link href="/assets/website/css/quantumultxfree/flaticon.css" rel="stylesheet">
    <!-- Owl Carousel CSS -->
    <link href="/assets/website/css/quantumultxfree/owl.carousel.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/website/css/quantumultxfree/style.css" rel="stylesheet">
    <!-- Responsive CSS -->
    <link href="/assets/website/css/quantumultxfree/responsive.css" rel="stylesheet">
    <!-- jquery -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery-3.5.1.min.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-EDZKKMGHSQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-EDZKKMGHSQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Pre-Loader -->
    <div id="loader">
        <div class="loading">
            <div class="spinner">
                <div class="bounce1"></div>
                <div class="bounce2"></div>
                <div class="bounce3"></div>
            </div>
        </div>
    </div>
    <!-- Header Area -->
    <header class="header-area">
        <div class="sticky-area">
            <div class="navigation">
                <div class="container">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">
                                    <span>QuantumultX Free</span>
                                </a>
                                                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="main-menu">
                                <nav class="navbar navbar-expand-lg">
                                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                        <span class="navbar-toggler-icon"></span>
                                        <span class="navbar-toggler-icon"></span>
                                        <span class="navbar-toggler-icon"></span>
                                    </button>
                                    <div class="collapse navbar-collapse justify-content-center" id="navbarSupportedContent">
                                        <ul class="navbar-nav ml-auto">
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/">首页</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/free-nodes/">免费节点</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/news/">新闻资讯</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="#">关于</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="#">联系</a>
                                            </li>
                                        </ul>
                                    </div>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- Breadcroumb Area -->
    <div class="breadcroumb-area bread-bg">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcroumb-title">
                        <h1>Pytorch中的Conv1d()和Conv2d()函数</h1>
                        <h6><a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文</h6>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- About Section-->
    <div class="about-area section-padding py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li><a href="#PytorchConv1d_2" rel="nofollow">一、Pytorch中的Conv1d()函数</a></li> <li><a href="#PytorchConv2d_72" rel="nofollow">二、Pytorch中的Conv2d()函数</a></li> <li><a href="#PytorchMaxPool1d_134" rel="nofollow">三、Pytorch中的MaxPool1d()函数</a></li> <li><a href="#pytorchMaxPool2d_157" rel="nofollow">四、pytorch中的MaxPool2d()函数</a></li> <li><a href="#_189" rel="nofollow">参考资料</a></li> </ul> </li> </ul> </div> <h2> <a id="PytorchConv1d_2" rel="nofollow"></a>一、Pytorch中的Conv1d()函数</h2> <pre><code>class torch.nn.Conv1d( 		in_channels,  		out_channels,  		kernel_size,  		stride=1,  		padding=0,  		dilation=1,  		groups=1,  		bias=True) </code></pre> <p>Conv1d()函数就是利用指定大小的一维卷积核对输入的多通道一维输入信号进行一维卷积操作的卷积层。</p> <p>最简单的情况下，对于输入大小为<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        (</p> <p>        N</p> <p>        ,</p> <p>         C</p> <p>          i</p> <p>          n</p> <p>        ,</p> <p>         L</p> <p>          i</p> <p>          n</p> <p>        )</p> <p>       (N, C_{in}, L_{in})</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right: 0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.311664em;"><span class="" style="top: -2.55em; margin-left: -0.07153em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.311664em;"><span class="" style="top: -2.55em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span>，输出大小为<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        (</p> <p>        N</p> <p>        ,</p> <p>         C</p> <p>          o</p> <p>          u</p> <p>          t</p> <p>        ,</p> <p>         L</p> <p>          o</p> <p>          u</p> <p>          t</p> <p>        )</p> <p>       (N, C_{out}, L_{out})</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right: 0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.280556em;"><span class="" style="top: -2.55em; margin-left: -0.07153em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.280556em;"><span class="" style="top: -2.55em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span>的一维卷积层，其中， N 代表batch size，C代表通道的数量, L代表信号序列的长度。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221225/957f0702588cdd2e68705f79881824eb.jpg" alt="Pytorch中的Conv1d()和Conv2d()函数"></p> <ul> <li> <b> in_channels (int) </b>– 输入通道个数。在文本应用中，即为词向量的维度</li> <li> <b>out_channels (int) </b>– 输出通道个数 。有多少个out_channels，就需要多少个一维卷积（也就是卷积核的数量）</li> <li> <b>kernel_size(int or tuple)</b> – 卷积核的尺寸；卷积核的第二个维度由in_channels决定，所以实际上卷积核的大小为kernel_size * in_channels</li> <li>stride (int or tuple, optional) – 卷积操作的步长。 默认：1</li> <li>padding (int or tuple, optional) – 输入数据各维度各边上要补齐0的层数。 默认： 0</li> <li>dilation (int or tuple, optional) – 卷积核各元素之间的距离。 默认： 1</li> <li>groups (int, optional) – 输入通道与输出通道之间相互隔离的连接的个数。 默认：1</li> <li>bias (bool, optional) – 如果被置为True，向输出增加一个偏差量，此偏差是可学习参数。 默认：True</li> </ul> <table> <tbody> <tr> <td bgcolor="#FFF0AA" align="left"> <font color="red">一般来说，一维卷积nn.Conv1d()用于文本数据，<u><b>只对宽度进行卷积，对高度不卷积</b></u>。通常，输入大小为<b>word_embedding_dim * max_sent_length</b>，其中，<b>word_embedding_dim</b>为词向量的维度，<b>max_sent_length</b>为句子的最大长度。卷积核窗口在句子长度的方向上滑动，进行卷积操作。</font> </td> </tr> </tbody> </table> <p><strong>示例：</strong><br /> 输入：批大小为50，句子的最大长度为35，词向量维度为300<br /> 目标：句子分类，共2类</p> <pre><code class="prism language-python"><span class="token keyword">import</span> torch <span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn  <span class="token comment"># max_sent_len=35, batch_size=50, embedding_size=300</span> conv1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv1d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token comment"># batch_size x max_sent_len x embedding_size -&gt; batch_size x embedding_size x max_sent_len</span> <span class="token builtin">input</span> <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">.</span>permute<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"input:"</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> output <span class="token operator">=</span> conv1<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"output:"</span><span class="token punctuation">,</span> output<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 最大池化</span> pool1d <span class="token operator">=</span> nn<span class="token punctuation">.</span>MaxPool1d<span class="token punctuation">(</span>kernel_size<span class="token operator">=</span><span class="token number">35</span><span class="token operator">-</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> pool1d_value <span class="token operator">=</span> pool1d<span class="token punctuation">(</span>output<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"最大池化输出："</span><span class="token punctuation">,</span> pool1d_value<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 全连接</span> fc <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>in_features<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> out_features<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> fc_inp <span class="token operator">=</span> pool1d_value<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> pool1d_value<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"全连接输入："</span><span class="token punctuation">,</span> fc_inp<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> fc_outp <span class="token operator">=</span> fc<span class="token punctuation">(</span>fc_inp<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"全连接输出："</span><span class="token punctuation">,</span> fc_outp<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># softmax</span> m <span class="token operator">=</span> nn<span class="token punctuation">.</span>Softmax<span class="token punctuation">(</span><span class="token punctuation">)</span> out <span class="token operator">=</span> m<span class="token punctuation">(</span>fc_outp<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"输出结果值："</span><span class="token punctuation">,</span> out<span class="token punctuation">)</span> </code></pre> <p>运行结果为：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221225/0bd326ce4a94c7cb1f7a271a4057c5e7.jpg" alt="Pytorch中的Conv1d()和Conv2d()函数"></p> <ul> <li>原始输入大小为(50, 35, 300)，经过permute(0, 2, 1)操作后，输入的大小变为(50, 300, 35)；</li> <li>使用1个window_size为3的卷积核进行卷积，因为一维卷积是在最后维度上扫的，最后output的大小即为：50*100*（35-3+1）=50*100*33</li> <li>output经过最大池化操作后，得到了数据维度为：(50,100,1)</li> <li>经过（输入特征=100，输出特征=2）的全连接层，数据维度就变为了：(50，2)</li> <li>再经过softmax函数就得到了属于两个类别的概率值</li> </ul> <h2> <a id="PytorchConv2d_72" rel="nofollow"></a>二、Pytorch中的Conv2d()函数</h2> <pre><code>class torch.nn.Conv2d( 	in_channels,  	out_channels,  	kernel_size,  	stride=1,  	padding=0,  	dilation=1,  	groups=1,  	bias=True)  </code></pre> <p>该函数是利用指定大小的二维卷积核对输入的多通道二维输入信号进行二维卷积操作的卷积层。</p> <p>在最简单的情况下，对于输入大小为<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        (</p> <p>        N</p> <p>        ,</p> <p>         C</p> <p>          i</p> <p>          n</p> <p>        ,</p> <p>        H</p> <p>        ,</p> <p>        W</p> <p>        )</p> <p>       (N, C_{in}, H, W)</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right: 0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.311664em;"><span class="" style="top: -2.55em; margin-left: -0.07153em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord mathdefault" style="margin-right: 0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord mathdefault" style="margin-right: 0.13889em;">W</span><span class="mclose">)</span></span></span></span></span>，输出大小为<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        (</p> <p>        N</p> <p>        ,</p> <p>         C</p> <p>          o</p> <p>          u</p> <p>          t</p> <p>        ,</p> <p>         H</p> <p>          o</p> <p>          u</p> <p>          t</p> <p>        ,</p> <p>         W</p> <p>          o</p> <p>          u</p> <p>          t</p> <p>        )</p> <p>       (N, C_{out}, H_{out}, W_{out})</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right: 0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.280556em;"><span class="" style="top: -2.55em; margin-left: -0.07153em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.280556em;"><span class="" style="top: -2.55em; margin-left: -0.08125em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.280556em;"><span class="" style="top: -2.55em; margin-left: -0.13889em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span>的二维维卷积层，其卷积计算过程可以如下表述：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221225/0f657545269a947675629da1544cd975.jpg" alt="Pytorch中的Conv1d()和Conv2d()函数"><br /><span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        N</p> <p>       N</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.68333em; vertical-align: 0em;"></span><span class="mord mathdefault" style="margin-right: 0.10903em;">N</span></span></span></span></span> is a batch size, 代表通道的数量, <span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        H</p> <p>       H</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.68333em; vertical-align: 0em;"></span><span class="mord mathdefault" style="margin-right: 0.08125em;">H</span></span></span></span></span>是输入的二维数据的像素高度， <span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        W</p> <p>       W</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.68333em; vertical-align: 0em;"></span><span class="mord mathdefault" style="margin-right: 0.13889em;">W</span></span></span></span></span>是输入的二维数据的像素宽度。</p> <p>如果要用二维卷积来实现文本的处理也是可以的，还是上面的那个任务，用二维卷积来做的话，代码如下所示：</p> <pre><code class="prism language-python"><span class="token keyword">import</span> torch <span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn <span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> F  <span class="token comment"># max_sent_len=35, batch_size=50, embedding_dim=300</span> conv2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># batch_size x 1 × max_sent_len x embedding_dim</span> <span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"input:"</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> output <span class="token operator">=</span> conv2<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span> <span class="token comment"># batch_size × kernel_num × H × 1，其中H=max_sent_len-kernel_size+1</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"output:"</span><span class="token punctuation">,</span> output<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 最大池化</span> <span class="token comment"># pool = nn.MaxPool1d(kernel_size=35-3+1)</span> output <span class="token operator">=</span> output<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> pool1d_value <span class="token operator">=</span> F<span class="token punctuation">.</span>max_pool1d<span class="token punctuation">(</span>output<span class="token punctuation">,</span> output<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"最大池化输出："</span><span class="token punctuation">,</span> pool1d_value<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 全连接</span> fc <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>in_features<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> out_features<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> fc_inp <span class="token operator">=</span> pool1d_value<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> pool1d_value<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"全连接输入："</span><span class="token punctuation">,</span> fc_inp<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> fc_outp <span class="token operator">=</span> fc<span class="token punctuation">(</span>fc_inp<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"全连接输出："</span><span class="token punctuation">,</span> fc_outp<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># softmax</span> out <span class="token operator">=</span> F<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>fc_outp<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"输出结果值："</span><span class="token punctuation">,</span> out<span class="token punctuation">)</span> </code></pre> <p>运行结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221225/e18f92ea018c0be01eaf46a2d458f7bc.jpg" alt="Pytorch中的Conv1d()和Conv2d()函数"></p> <ul> <li>二维卷积输入大小为(50, 1，35, 300)，</li> <li>使用1个window_size为3的卷积核进行二维卷积，最后output的大小即为：50*100*（35-3+1）*1=50*100*33*1</li> <li>output经过最大池化操作后，得到了数据维度为：(50,100,1)</li> <li>经过（输入特征=100，输出特征=2）的全连接层，数据维度就变为了：(50，2)</li> <li>再经过softmax函数就得到了属于两个类别的概率值</li> </ul> <h2> <a id="PytorchMaxPool1d_134" rel="nofollow"></a>三、Pytorch中的MaxPool1d()函数</h2> <pre><code>class torch.nn.MaxPool1d( 	kernel_size,  	stride=None,  	padding=0,  	dilation=1,  	return_indices=False,  	ceil_mode=False) </code></pre> <p>该函数对输入的多通道信号执行一维最大池化操作。<br /> 最简单的情况下，对于输入大小为<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        (</p> <p>        N</p> <p>        ,</p> <p>        C</p> <p>        ,</p> <p>         L</p> <p>          i</p> <p>          n</p> <p>        )</p> <p>       (N, C, L_{in})</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right: 0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord mathdefault" style="margin-right: 0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.311664em;"><span class="" style="top: -2.55em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span> ，输出大小为<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        (</p> <p>        N</p> <p>        ,</p> <p>        C</p> <p>        ,</p> <p>         L</p> <p>          o</p> <p>          u</p> <p>          t</p> <p>        )</p> <p>       (N, C, L_{out})</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right: 0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord mathdefault" style="margin-right: 0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.280556em;"><span class="" style="top: -2.55em; margin-left: 0em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span> 的池化操作，此池化过程可表述如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221225/a6119fef63fdea3021455474c45dfb3f.jpg" alt="Pytorch中的Conv1d()和Conv2d()函数"><br /><strong>参数说明:</strong></p> <ul> <li>kernel_size – 最大池化操作的滑动窗大小</li> <li>stride – 滑动窗的步长，默认值是 kernel_size</li> <li>padding – 要在输入信号的各维度各边上要补齐0的层数</li> <li>dilation – 滑动窗中各元素之间的距离</li> <li>return_indices – 如果此参数被设置为True， 那么此池化层在返回输出信号的同时还会返回一连串滑动窗最大值的索引位置，即每个滑动窗的最大值位置信息。这些信息可以在后面的上采样torch.nn.MaxUnpool1d中被用到。</li> <li>ceil_mode – 如果此参数被设置为True，计算输出信号大小的时候，会使用向上取整，代替默认的向下取整的操作<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221225/98abd15a58ffcc0b80de75876638ecc7.jpg" alt="Pytorch中的Conv1d()和Conv2d()函数"> </li> </ul> <h2> <a id="pytorchMaxPool2d_157" rel="nofollow"></a>四、pytorch中的MaxPool2d()函数</h2> <pre><code>class torch.nn.MaxPool2d( 	kernel_size,  	stride=None,  	padding=0,  	dilation=1,  	return_indices=False,  	ceil_mode=False)  </code></pre> <p>该函数是对输入的多通道信号执行二维最大池化操作。</p> <p>最简单的情况下，对于输入大小为 <span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        (</p> <p>        N</p> <p>        ,</p> <p>        C</p> <p>        ,</p> <p>        H</p> <p>        ,</p> <p>        W</p> <p>        )</p> <p>       (N, C, H, W)</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right: 0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord mathdefault" style="margin-right: 0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord mathdefault" style="margin-right: 0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord mathdefault" style="margin-right: 0.13889em;">W</span><span class="mclose">)</span></span></span></span></span> ，输出大小为<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        (</p> <p>        N</p> <p>        ,</p> <p>        C</p> <p>        ,</p> <p>         H</p> <p>          o</p> <p>          u</p> <p>          t</p> <p>        ,</p> <p>         W</p> <p>          o</p> <p>          u</p> <p>          t</p> <p>        )</p> <p>       (N, C, H_{out}, W_{out})</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right: 0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord mathdefault" style="margin-right: 0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.280556em;"><span class="" style="top: -2.55em; margin-left: -0.08125em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right: 0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height: 0.280556em;"><span class="" style="top: -2.55em; margin-left: -0.13889em; margin-right: 0.05em;"><span class="pstrut" style="height: 2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s"></span></span><span class="vlist-r"><span class="vlist" style="height: 0.15em;"><span class=""></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span>，kernel_size为<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        (</p> <p>        k</p> <p>        H</p> <p>        ,</p> <p>        k</p> <p>        W</p> <p>        )</p> <p>       (kH, kW)</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right: 0.03148em;">k</span><span class="mord mathdefault" style="margin-right: 0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right: 0.166667em;"></span><span class="mord mathdefault" style="margin-right: 0.03148em;">k</span><span class="mord mathdefault" style="margin-right: 0.13889em;">W</span><span class="mclose">)</span></span></span></span></span>的池化操作.<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221225/a34b787c0590e5065900e62ddc533224.jpg" alt="Pytorch中的Conv1d()和Conv2d()函数"><br /> 示例：</p> <pre><code class="prism language-python"><span class="token keyword">import</span> torch <span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn <span class="token comment"># pool of square window of size=3, stride=2</span> <span class="token comment"># m = nn.MaxPool2d(3, stride=2)</span> <span class="token comment"># pool of non-square window</span> m <span class="token operator">=</span> nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> output <span class="token operator">=</span> m<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <p>运行结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221225/15f3f6e5218268cfcd4d0b3cfd2343b0.jpg" alt="Pytorch中的Conv1d()和Conv2d()函数"></p> <h2> <a id="_189" rel="nofollow"></a>参考资料</h2> <ul> <li>pytorch中文文档： <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pytorch.apachecn.org/docs/1.2/nn.html#conv1d"  rel="nofollow">https://pytorch.apachecn.org/docs/1.2/nn.html#conv1d</a> </li> <li>博客：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.jianshu.com/p/45a26d278473"  rel="nofollow">https://www.jianshu.com/p/45a26d278473</a> </li> </ul> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-32310.htm">vue如何通过button的disabled控制按钮能否被使用_vue.js</a></p>
                                        <p>下一个：<a href="/news/article-32797.htm">昆明免费领养宠物的地方（昆明免费领养宠物的地方在哪里）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-23408.htm" title="动物疫苗厂家查询电话 动物疫苗厂家查询电话号码">动物疫苗厂家查询电话 动物疫苗厂家查询电话号码</a></li>
                        <li class="py-2"><a href="/news/article-22959.htm" title="宠物医院诊疗许可证要求是什么样的（宠物诊所诊疗许可证申请条件）">宠物医院诊疗许可证要求是什么样的（宠物诊所诊疗许可证申请条件）</a></li>
                        <li class="py-2"><a href="/news/article-28063.htm" title="Spring AOP打通两个切面之间的通信详解">Spring AOP打通两个切面之间的通信详解</a></li>
                        <li class="py-2"><a href="/news/article-30414.htm" title="国内宠物粮食十大厂家排名前十有哪些（中国前十宠物粮公司）">国内宠物粮食十大厂家排名前十有哪些（中国前十宠物粮公司）</a></li>
                        <li class="py-2"><a href="/news/article-27133.htm" title="记将一个大型客户端应用项目迁移到 dotnet 6 的经验和决策_在线工具">记将一个大型客户端应用项目迁移到 dotnet 6 的经验和决策_在线工具</a></li>
                        <li class="py-2"><a href="/news/article-28988.htm" title="在MySQL中，如何将FROM_UNIXTIME()函数与格式字符串一起使用？">在MySQL中，如何将FROM_UNIXTIME()函数与格式字符串一起使用？</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-12-node-share-links.htm" title="12月12日→18.9M/S|2024年最新免费节点QuantumultX Free订阅链接地址">12月12日→18.9M/S|2024年最新免费节点QuantumultX Free订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-6-node-share-links.htm" title="12月6日→22.7M/S|2024年最新免费节点QuantumultX Free订阅链接地址">12月6日→22.7M/S|2024年最新免费节点QuantumultX Free订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-22501.htm" title="我想开宠物店（我想开宠物店怎么申请）">我想开宠物店（我想开宠物店怎么申请）</a></li>
                        <li class="py-2"><a href="/news/article-20210.htm" title="广州宠物领养中心有哪些公司 广州宠物领养中心有哪些公司招聘">广州宠物领养中心有哪些公司 广州宠物领养中心有哪些公司招聘</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">11</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
       <div class="footer-bottom">
        <div class="container">
            <div class="row justify-content-center align-items-center">
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <p class="copyright-line">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <a href="/">QuantumultX Free免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <p class="privacy">Privacy Policy | Terms &amp; Conditions</p>
                </div>
            </div>
        </div>
    </div>
    <!-- Scroll Top Area -->
    <a href="#top" class="go-top"><i class="las la-angle-up"></i></a>
    <!-- Popper JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/popper.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/bootstrap.min.js"></script>
    <!-- Wow JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/wow.min.js"></script>
    <!-- Way Points JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.waypoints.min.js"></script>
    <!-- Counter Up JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.counterup.min.js"></script>
    <!-- Owl Carousel JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/owl.carousel.min.js"></script>
    <!-- Magnific Popup JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/magnific-popup.min.js"></script>
    <!-- Sticky JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.sticky.js"></script>
    <!-- Progress Bar JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.barfiller.js"></script>
    <!-- Main JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>