<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://quantumultxfree.github.io/news/article-35169.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Python 实现走迷宫深度优先回溯算法（优质代码）</title>
        <meta name="description" content="#地图：0是可走的地方，1是障碍物     maze=np.array([[0,0,0,0,0],[0,1,0,1,0],[0,1,1,0,0],[0,1,1,0,0],[0,0,0,0,0]]) 入" />
        <link rel="icon" href="/assets/website/img/quantumultxfree/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap CSS -->
    <link href="/assets/website/css/quantumultxfree/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome CSS-->
    <link href="/assets/website/css/quantumultxfree/font-awesome.min.css" rel="stylesheet">
    <!-- Line Awesome CSS -->
    <link href="/assets/website/css/quantumultxfree/line-awesome.min.css" rel="stylesheet">
    <!-- Animate CSS-->
    <link href="/assets/website/css/quantumultxfree/animate.css" rel="stylesheet">
    <!-- Bar Filler CSS -->
    <link href="/assets/website/css/quantumultxfree/barfiller.css" rel="stylesheet">
    <!-- Flaticon CSS -->
    <link href="/assets/website/css/quantumultxfree/flaticon.css" rel="stylesheet">
    <!-- Owl Carousel CSS -->
    <link href="/assets/website/css/quantumultxfree/owl.carousel.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/website/css/quantumultxfree/style.css" rel="stylesheet">
    <!-- Responsive CSS -->
    <link href="/assets/website/css/quantumultxfree/responsive.css" rel="stylesheet">
    <!-- jquery -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery-3.5.1.min.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-EDZKKMGHSQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-EDZKKMGHSQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Pre-Loader -->
    <div id="loader">
        <div class="loading">
            <div class="spinner">
                <div class="bounce1"></div>
                <div class="bounce2"></div>
                <div class="bounce3"></div>
            </div>
        </div>
    </div>
    <!-- Header Area -->
    <header class="header-area">
        <div class="sticky-area">
            <div class="navigation">
                <div class="container">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="logo">
                                                                <a class="navbar-brand" href="/">
                                    <span>QuantumultX Free</span>
                                </a>
                                                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="main-menu">
                                <nav class="navbar navbar-expand-lg">
                                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                        <span class="navbar-toggler-icon"></span>
                                        <span class="navbar-toggler-icon"></span>
                                        <span class="navbar-toggler-icon"></span>
                                    </button>
                                    <div class="collapse navbar-collapse justify-content-center" id="navbarSupportedContent">
                                        <ul class="navbar-nav ml-auto">
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/">首页</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/free-nodes/">免费节点</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/news/">新闻资讯</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="#">关于</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="#">联系</a>
                                            </li>
                                        </ul>
                                    </div>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- Breadcroumb Area -->
    <div class="breadcroumb-area bread-bg">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcroumb-title">
                        <h1>Python 实现走迷宫深度优先回溯算法（优质代码）</h1>
                        <h6><a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文</h6>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- About Section-->
    <div class="about-area section-padding py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> </h1> <pre><code class="prism language-python"><span class="token comment">#地图：0是可走的地方，1是障碍物</span>     maze<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre> <p>入口和出口：</p> <pre><code class="prism language-python">    startP<span class="token operator">=</span>Point<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#起点坐标</span>     endP<span class="token operator">=</span>Point<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment">#终点坐标</span></code></pre> <p>没有传送门</p> </h1> <pre><code class="prism language-python"><span class="token keyword">import</span> numpy<span class="token keyword">as</span> np</code></pre> </h1> <pre><code class="prism language-python"><span class="token triple-quoted-string string">''' 类:Point 用来标识坐标点 '''</span><span class="token keyword">class</span><span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">def</span><span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>         self<span class="token punctuation">.</span>row<span class="token operator">=</span>x         self<span class="token punctuation">.</span>col<span class="token operator">=</span>y</code></pre> </h1> <pre><code class="prism language-python"><span class="token triple-quoted-string string">''' 函数：判断两个点是否相同 参数:     Point p1      Point p2 '''</span><span class="token keyword">def</span><span class="token function">isSamePoint</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>row<span class="token operator">==</span>p2<span class="token punctuation">.</span>row<span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>col<span class="token operator">==</span>p2<span class="token punctuation">.</span>col<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span><span class="token boolean">True</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">return</span><span class="token boolean">False</span><span class="token triple-quoted-string string">''' 函数：获取相邻未被访问的节点(上下左右) 参数说明：     mark：节点标记     point：节点      m：行      n：列 '''</span><span class="token keyword">def</span><span class="token function">getAdjacentNotVisitedNode</span><span class="token punctuation">(</span>mark<span class="token punctuation">,</span>point<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>     resP<span class="token operator">=</span>Point<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>row<span class="token operator">-</span><span class="token number">1</span><span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>mark<span class="token punctuation">[</span>point<span class="token punctuation">.</span>row<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>point<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         resP<span class="token punctuation">.</span>row<span class="token operator">=</span>point<span class="token punctuation">.</span>row<span class="token operator">-</span><span class="token number">1</span>         rep<span class="token punctuation">.</span>col<span class="token operator">=</span>point<span class="token punctuation">.</span>col<span class="token keyword">return</span> resP<span class="token keyword">if</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>col<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span>n<span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>mark<span class="token punctuation">[</span>point<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>point<span class="token punctuation">.</span>col<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         resP<span class="token punctuation">.</span>row<span class="token operator">=</span>point<span class="token punctuation">.</span>row         resP<span class="token punctuation">.</span>col<span class="token operator">=</span>point<span class="token punctuation">.</span>col<span class="token operator">+</span><span class="token number">1</span><span class="token keyword">return</span> resP<span class="token keyword">if</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span>m<span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>mark<span class="token punctuation">[</span>point<span class="token punctuation">.</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>point<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         resP<span class="token punctuation">.</span>row<span class="token operator">=</span>point<span class="token punctuation">.</span>row<span class="token operator">+</span><span class="token number">1</span>         resP<span class="token punctuation">.</span>col<span class="token operator">=</span>point<span class="token punctuation">.</span>col<span class="token keyword">return</span> resP<span class="token keyword">if</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>col<span class="token operator">-</span><span class="token number">1</span><span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>mark<span class="token punctuation">[</span>point<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>point<span class="token punctuation">.</span>col<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         resP<span class="token punctuation">.</span>row<span class="token operator">=</span>point<span class="token punctuation">.</span>row         resP<span class="token punctuation">.</span>col<span class="token operator">=</span>point<span class="token punctuation">.</span>col<span class="token operator">-</span><span class="token number">1</span><span class="token keyword">return</span> resP<span class="token keyword">return</span> resP</code></pre> </h1> <pre><code class="prism language-python"><span class="token triple-quoted-string string">''' 函数：寻路函数 参数：     maze：地图     m：行      n：列     pointStack：点栈，用于存放路径 '''</span><span class="token keyword">def</span><span class="token function">mazePath</span><span class="token punctuation">(</span>maze<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">,</span>startP<span class="token punctuation">,</span>endP<span class="token punctuation">,</span>pointStack<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span><span class="token punctuation">(</span>maze<span class="token punctuation">[</span>startP<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>startP<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">or</span><span class="token punctuation">(</span>maze<span class="token punctuation">[</span>endP<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>endP<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span><span class="token comment">#</span>     mark<span class="token operator">=</span>maze<span class="token comment">#将起点入栈</span>     pointStack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>startP<span class="token punctuation">)</span>     mark<span class="token punctuation">[</span>startP<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>startP<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token comment">#栈不空并且栈顶元素不为结束节点</span>     ptop<span class="token operator">=</span>pointStack<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>pointStack<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>isSamePoint<span class="token punctuation">(</span>ptop<span class="token punctuation">,</span>endP<span class="token punctuation">)</span><span class="token operator">==</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         ptop<span class="token operator">=</span>pointStack<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>         adjacentNotVisitedNode<span class="token operator">=</span>getAdjacentNotVisitedNode<span class="token punctuation">(</span>mark<span class="token punctuation">,</span>ptop<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">if</span> adjacentNotVisitedNode<span class="token punctuation">.</span>row<span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>             pointStack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">continue</span>         mark<span class="token punctuation">[</span>adjacentNotVisitedNode<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>adjacentNotVisitedNode<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>         pointStack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>adjacentNotVisitedNode<span class="token punctuation">)</span></code></pre> </h1> <pre><code class="prism language-python"><span class="token keyword">def</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#地图：0是可走的地方，1是障碍物</span>     maze<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      startP<span class="token operator">=</span>Point<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#起点坐标</span>     endP<span class="token operator">=</span>Point<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment">#终点坐标</span>          pointStack<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#设置点栈</span>     mazePath<span class="token punctuation">(</span>maze<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>startP<span class="token punctuation">,</span>endP<span class="token punctuation">,</span>pointStack<span class="token punctuation">)</span><span class="token comment">#执行寻路函数</span><span class="token keyword">if</span><span class="token builtin">len</span><span class="token punctuation">(</span>pointStack<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Died.....No way can go'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>         tmpStack<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Path:'</span><span class="token punctuation">)</span><span class="token keyword">while</span><span class="token builtin">len</span><span class="token punctuation">(</span>pointStack<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">:</span>             tmpStack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pointStack<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>             pointStack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span><span class="token builtin">len</span><span class="token punctuation">(</span>tmpStack<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">:</span>             p<span class="token operator">=</span>tmpStack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&lt;{},{}&gt;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>row<span class="token punctuation">,</span>p<span class="token punctuation">.</span>col<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">"__main__"</span><span class="token punctuation">:</span>     main<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre> </h1> <pre><code class="prism language-python"><span class="token keyword">import</span> numpy<span class="token keyword">as</span> np<span class="token triple-quoted-string string">''' 类:Point 用来标识坐标点 '''</span><span class="token keyword">class</span><span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">def</span><span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>         self<span class="token punctuation">.</span>row<span class="token operator">=</span>x         self<span class="token punctuation">.</span>col<span class="token operator">=</span>y<span class="token triple-quoted-string string">''' 函数：判断两个点是否相同 参数:     Point p1      Point p2 '''</span><span class="token keyword">def</span><span class="token function">isSamePoint</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>row<span class="token operator">==</span>p2<span class="token punctuation">.</span>row<span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>col<span class="token operator">==</span>p2<span class="token punctuation">.</span>col<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span><span class="token boolean">True</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">return</span><span class="token boolean">False</span><span class="token triple-quoted-string string">''' 函数：获取相邻未被访问的节点(上下左右) 参数说明：     mark：节点标记     point：节点      m：行      n：列 '''</span><span class="token keyword">def</span><span class="token function">getAdjacentNotVisitedNode</span><span class="token punctuation">(</span>mark<span class="token punctuation">,</span>point<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>     resP<span class="token operator">=</span>Point<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>row<span class="token operator">-</span><span class="token number">1</span><span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>mark<span class="token punctuation">[</span>point<span class="token punctuation">.</span>row<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>point<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         resP<span class="token punctuation">.</span>row<span class="token operator">=</span>point<span class="token punctuation">.</span>row<span class="token operator">-</span><span class="token number">1</span>         rep<span class="token punctuation">.</span>col<span class="token operator">=</span>point<span class="token punctuation">.</span>col<span class="token keyword">return</span> resP<span class="token keyword">if</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>col<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span>n<span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>mark<span class="token punctuation">[</span>point<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>point<span class="token punctuation">.</span>col<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         resP<span class="token punctuation">.</span>row<span class="token operator">=</span>point<span class="token punctuation">.</span>row         resP<span class="token punctuation">.</span>col<span class="token operator">=</span>point<span class="token punctuation">.</span>col<span class="token operator">+</span><span class="token number">1</span><span class="token keyword">return</span> resP<span class="token keyword">if</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span>m<span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>mark<span class="token punctuation">[</span>point<span class="token punctuation">.</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>point<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         resP<span class="token punctuation">.</span>row<span class="token operator">=</span>point<span class="token punctuation">.</span>row<span class="token operator">+</span><span class="token number">1</span>         resP<span class="token punctuation">.</span>col<span class="token operator">=</span>point<span class="token punctuation">.</span>col<span class="token keyword">return</span> resP<span class="token keyword">if</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>col<span class="token operator">-</span><span class="token number">1</span><span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>mark<span class="token punctuation">[</span>point<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>point<span class="token punctuation">.</span>col<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         resP<span class="token punctuation">.</span>row<span class="token operator">=</span>point<span class="token punctuation">.</span>row         resP<span class="token punctuation">.</span>col<span class="token operator">=</span>point<span class="token punctuation">.</span>col<span class="token operator">-</span><span class="token number">1</span><span class="token keyword">return</span> resP<span class="token keyword">return</span> resP<span class="token triple-quoted-string string">''' 函数：寻路函数 参数：     maze：地图     m：行      n：列     pointStack：点栈，用于存放路径 '''</span><span class="token keyword">def</span><span class="token function">mazePath</span><span class="token punctuation">(</span>maze<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">,</span>startP<span class="token punctuation">,</span>endP<span class="token punctuation">,</span>pointStack<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span><span class="token punctuation">(</span>maze<span class="token punctuation">[</span>startP<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>startP<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">or</span><span class="token punctuation">(</span>maze<span class="token punctuation">[</span>endP<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>endP<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span><span class="token comment">#</span>     mark<span class="token operator">=</span>maze<span class="token comment">#将起点入栈</span>     pointStack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>startP<span class="token punctuation">)</span>     mark<span class="token punctuation">[</span>startP<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>startP<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token comment">#栈不空并且栈顶元素不为结束节点</span>     ptop<span class="token operator">=</span>pointStack<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>pointStack<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">and</span><span class="token punctuation">(</span>isSamePoint<span class="token punctuation">(</span>ptop<span class="token punctuation">,</span>endP<span class="token punctuation">)</span><span class="token operator">==</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         ptop<span class="token operator">=</span>pointStack<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>         adjacentNotVisitedNode<span class="token operator">=</span>getAdjacentNotVisitedNode<span class="token punctuation">(</span>mark<span class="token punctuation">,</span>ptop<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">if</span> adjacentNotVisitedNode<span class="token punctuation">.</span>row<span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>             pointStack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">continue</span>         mark<span class="token punctuation">[</span>adjacentNotVisitedNode<span class="token punctuation">.</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>adjacentNotVisitedNode<span class="token punctuation">.</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>         pointStack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>adjacentNotVisitedNode<span class="token punctuation">)</span><span class="token keyword">def</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#地图：0是可走的地方，1是障碍物</span>     maze<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      startP<span class="token operator">=</span>Point<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#起点坐标</span>     endP<span class="token operator">=</span>Point<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment">#终点坐标</span>          pointStack<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#设置点栈</span>     mazePath<span class="token punctuation">(</span>maze<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>startP<span class="token punctuation">,</span>endP<span class="token punctuation">,</span>pointStack<span class="token punctuation">)</span><span class="token comment">#执行寻路函数</span><span class="token keyword">if</span><span class="token builtin">len</span><span class="token punctuation">(</span>pointStack<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Died.....No way can go'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>         tmpStack<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Path:'</span><span class="token punctuation">)</span><span class="token keyword">while</span><span class="token builtin">len</span><span class="token punctuation">(</span>pointStack<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">:</span>             tmpStack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pointStack<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>             pointStack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span><span class="token builtin">len</span><span class="token punctuation">(</span>tmpStack<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">:</span>             p<span class="token operator">=</span>tmpStack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&lt;{},{}&gt;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>row<span class="token punctuation">,</span>p<span class="token punctuation">.</span>col<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">"__main__"</span><span class="token punctuation">:</span>     main<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre> <p>输出寻路路径的点坐标：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220819/1013add8359ad4dc1bd4e0d7e787c1c3.jpg" alt="Python 实现走迷宫深度优先回溯算法（优质代码）"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-34696.htm">动物疫苗周期多久有效啊（动物疫苗周期多久有效啊）</a></p>
                                        <p>下一个：<a href="/news/article-35170.htm">兽用疫苗销售人员（兽用疫苗销售人员要求）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-26668.htm" title="广州宠物猫领养中心地址电话是多少（广州市猫狗免费领养市场在哪里）">广州宠物猫领养中心地址电话是多少（广州市猫狗免费领养市场在哪里）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-2-free-quantumult-x-node.htm" title="12月2日→22.2M/S|2024年最新免费节点QuantumultX Free订阅链接地址">12月2日→22.2M/S|2024年最新免费节点QuantumultX Free订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-10-node-share-links.htm" title="11月10日→22.1M/S|2024年最新免费节点QuantumultX Free订阅链接地址">11月10日→22.1M/S|2024年最新免费节点QuantumultX Free订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-23871.htm" title="动物疫苗的股票有哪些 动物疫苗相关股票">动物疫苗的股票有哪些 动物疫苗相关股票</a></li>
                        <li class="py-2"><a href="/news/article-27593.htm" title="SpringBoot的Spring Security注销以及权限控制">SpringBoot的Spring Security注销以及权限控制</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-27-quantumult-x-node-share.htm" title="12月27日→19.6M/S|2024年最新免费节点QuantumultX Free订阅链接地址">12月27日→19.6M/S|2024年最新免费节点QuantumultX Free订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-31-quantumult-x-github.htm" title="10月31日→22.3M/S|2024年最新免费节点QuantumultX Free订阅链接地址">10月31日→22.3M/S|2024年最新免费节点QuantumultX Free订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-17-quantumult-x-node-share.htm" title="11月17日→20.7M/S|2024年最新免费节点QuantumultX Free订阅链接地址">11月17日→20.7M/S|2024年最新免费节点QuantumultX Free订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-23406.htm" title="动物防疫疫苗与接种的关系是什么（动物疫苗的重要性）">动物防疫疫苗与接种的关系是什么（动物疫苗的重要性）</a></li>
                        <li class="py-2"><a href="/news/article-26221.htm" title="动物医疗机构的主管部门（动物医疗机构的主管部门是哪里）">动物医疗机构的主管部门（动物医疗机构的主管部门是哪里）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">15</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
       <div class="footer-bottom">
        <div class="container">
            <div class="row justify-content-center align-items-center">
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <p class="copyright-line">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <a href="/">QuantumultX Free免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <p class="privacy">Privacy Policy | Terms &amp; Conditions</p>
                </div>
            </div>
        </div>
    </div>
    <!-- Scroll Top Area -->
    <a href="#top" class="go-top"><i class="las la-angle-up"></i></a>
    <!-- Popper JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/popper.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/bootstrap.min.js"></script>
    <!-- Wow JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/wow.min.js"></script>
    <!-- Way Points JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.waypoints.min.js"></script>
    <!-- Counter Up JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.counterup.min.js"></script>
    <!-- Owl Carousel JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/owl.carousel.min.js"></script>
    <!-- Magnific Popup JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/magnific-popup.min.js"></script>
    <!-- Sticky JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.sticky.js"></script>
    <!-- Progress Bar JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.barfiller.js"></script>
    <!-- Main JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>