<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://quantumultxfree.github.io/news/article-55349.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>如何一个项目配置多个数据库</title>
        <meta name="description" content="我们在项目中经常会遇到配置多个数据的情况，之前我有写过通过配置mapper.xml的不同地址来实现同一个项目连接到多个数据库。如果用这种方式可以参考，下面一片文章。 https://blog.csdn" />
        <link rel="icon" href="/assets/website/img/quantumultxfree/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="QuantumultX Free免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://quantumultxfree.github.io/news/article-55349.htm" />
    <meta property="og:site_name" content="QuantumultX Free免费机场订阅节点官网" />
    <meta property="og:title" content="如何一个项目配置多个数据库" />
    <meta property="og:image" content="https://quantumultxfree.github.io/uploads/20240920/b2950d5f26a75a35aceb2fb84bd7db55.webp" />
        <meta property="og:release_date" content="2025-02-12T09:08:15" />
    <meta property="og:updated_time" content="2025-02-12T09:08:15" />
        <meta property="og:description" content="我们在项目中经常会遇到配置多个数据的情况，之前我有写过通过配置mapper.xml的不同地址来实现同一个项目连接到多个数据库。如果用这种方式可以参考，下面一片文章。 https://blog.csdn" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="如何一个项目配置多个数据库">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">

    <!-- Bootstrap CSS -->
    <link href="/assets/website/css/quantumultxfree/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome CSS-->
    <link href="/assets/website/css/quantumultxfree/font-awesome.min.css" rel="stylesheet">
    <!-- Line Awesome CSS -->
    <link href="/assets/website/css/quantumultxfree/line-awesome.min.css" rel="stylesheet">
    <!-- Animate CSS-->
    <link href="/assets/website/css/quantumultxfree/animate.css" rel="stylesheet">
    <!-- Bar Filler CSS -->
    <link href="/assets/website/css/quantumultxfree/barfiller.css" rel="stylesheet">
    <!-- Flaticon CSS -->
    <link href="/assets/website/css/quantumultxfree/flaticon.css" rel="stylesheet">
    <!-- Owl Carousel CSS -->
    <link href="/assets/website/css/quantumultxfree/owl.carousel.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/website/css/quantumultxfree/style.css" rel="stylesheet">
    <!-- Responsive CSS -->
    <link href="/assets/website/css/quantumultxfree/responsive.css" rel="stylesheet">
    <!-- jquery -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery-3.5.1.min.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-EDZKKMGHSQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-EDZKKMGHSQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Pre-Loader -->
    <div id="loader">
        <div class="loading">
            <div class="spinner">
                <div class="bounce1"></div>
                <div class="bounce2"></div>
                <div class="bounce3"></div>
            </div>
        </div>
    </div>
    <!-- Header Area -->
    <header class="header-area">
        <div class="sticky-area">
            <div class="navigation">
                <div class="container">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="logo">
                                <a class="navbar-brand" href="/">
                                                                <span>QuantumultX Free</span>
                                                                </a>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="main-menu">
                                <nav class="navbar navbar-expand-lg">
                                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                        <span class="navbar-toggler-icon"></span>
                                        <span class="navbar-toggler-icon"></span>
                                        <span class="navbar-toggler-icon"></span>
                                    </button>
                                    <div class="collapse navbar-collapse justify-content-center" id="navbarSupportedContent">
                                        <ul class="navbar-nav ml-auto">
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/">首页</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/free-nodes/">免费节点</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/client.htm">客户端</a>
                                            </li>
                                                                                        <li class="nav-item">
                                                <a class="nav-link" href="/news/">新闻资讯</a>
                                            </li>
                                                                                    </ul>
                                    </div>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- Breadcroumb Area -->
    <div class="breadcroumb-area bread-bg">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcroumb-title">
                        <h1>如何一个项目配置多个数据库</h1>
                        <h6><a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文</h6>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- About Section-->
    <div class="about-area section-padding py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>我们在项目中经常会遇到配置多个数据的情况，之前我有写过通过配置mapper.xml的不同地址来实现同一个项目连接到多个数据库。如果用这种方式可以参考，下面一片文章。</p> <pre><code>https://blog.csdn.net/fajing_feiyue/article/details/100604300</code></pre> <p>这篇文档与上面一种方式相比，是通过注解来实现和切面来配置实现数据库，这种方式需要能够更深刻来理解mybatis与spring的结合，这里将这种方式展示出来供大家参考。</p> <p>1、引入maven依赖</p> <pre><code>    &lt;dependencies&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;             &lt;version&gt;2.0.4.RELEASE&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.mybatis&lt;/groupId&gt;             &lt;artifactId&gt;mybatis&lt;/artifactId&gt;             &lt;version&gt;3.5.2&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;com.alibaba&lt;/groupId&gt;             &lt;artifactId&gt;druid&lt;/artifactId&gt;             &lt;version&gt;1.1.12&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;com.alibaba&lt;/groupId&gt;             &lt;artifactId&gt;druid&lt;/artifactId&gt;             &lt;version&gt;1.1.12&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;             &lt;scope&gt;test&lt;/scope&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;             &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;             &lt;version&gt;2.1.0&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;mysql&lt;/groupId&gt;             &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;             &lt;scope&gt;runtime&lt;/scope&gt;             &lt;version&gt;8.0.17&lt;/version&gt;         &lt;/dependency&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-log4j2&lt;/artifactId&gt;             &lt;version&gt;2.0.4.RELEASE&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;             &lt;version&gt;1.5.3.RELEASE&lt;/version&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;             &lt;scope&gt;test&lt;/scope&gt;             &lt;exclusions&gt;                 &lt;exclusion&gt;                     &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;                     &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;                 &lt;/exclusion&gt;             &lt;/exclusions&gt;         &lt;/dependency&gt;</code></pre> <p>2、配置application.properties</p> <pre><code>server.port=8080   default.datasource.type=com.alibaba.druid.pool.DruidDataSource default.datasource.url=jdbc:mysql://127.0.0.1:3306/pingyougou?serverTimezone=UTC default.datasource.driver-class-name=com.mysql.cj.jdbc.Driver default.datasource.username=root default.datasource.password=123  custom.datasource.names=custom1 custom.datasource.custom1.type=com.alibaba.druid.pool.DruidDataSource custom.datasource.custom1.url=jdbc:mysql://127.0.0.1:3306/pinyougoudb?serverTimezone=UTC custom.datasource.custom1.driver-class-name=com.mysql.cj.jdbc.Driver custom.datasource.custom1.username=root custom.datasource.custom1.password=123   #配置初始化大小，最小，最大 common.datasource.initialSize=10 common.datasource.minIdle=10 common.datasource.maxActive=50 #配置连接等待超时时间 common.datasource.maxWait=15000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 common.datasource.timeBetweenEvictionRunsMillis=60000 #配置一个连接在池中最小生存时间，一个小时 common.datasource.minEvictableIdleTimeMillis=3600000 #连接空闲时是否进行有效性验证（即是否还和数据库连通的） common.datasource.testWhileIdle=true #取得连接时是否进行有效性验证（即是否还和数据库连通的）【防止取到连接不可用】 common.datasource.testOnBorrow=true #回连接时是否进行有效性验证（即是否还和数据库连通的） common.datasource.testOnReturn=false #配置提交方式，默认是true，可以不用配置 common.datasource.defultAutoCommint=true   #logging.config=classpath:config/log4j2.xml  #配置.xml文件路径 #mybatis.config-locations=classpath:mybatis/mybatis-config.xml mybatis.mapper-locations=classpath:mapper/*.xml mybatis.type-aliases-package=com.yin.dynamic_datasource.dto</code></pre> <p>3、通过实现ImportBeanDefinitionRegistrar动态注册DataSource，实现EnvironmentAware 来读取application.properties里面的内容。由自己定义DynamicDataSourceContextHolder来保存目前正在数据库的信息<br /> 和每个线程所使用的数据库。并且设置由自己定义的DynamicDataSource来切换数据库。</p> <pre><code>public class DynamicDataSourceRegister implements ImportBeanDefinitionRegistrar, EnvironmentAware {      private static final Logger logger = LoggerFactory.getLogger(DynamicDataSourceRegister.class);     private static final Object DATASOURCE_TYPE_DEFAULT = "com.alibaba.druid.pool.DruidDataSource";     private DataSource defaultDataSource;     private Map&lt;String, DataSource&gt; customDataSources = new HashMap();     private static String DB_NAME = "names";     private static String DB_DEFAULT_VALUE = "default.datasource";     private static String DB_CUSTOM_VALUE = "custom.datasource";     private static String DB_COMMON_VALUE = "common.datasource";       public DynamicDataSourceRegister() {     }        @Override     public void setEnvironment(Environment env) {         initDefaultDataSource(env);         initCustomDataSources(env);      }      private void initCustomDataSources(Environment env) {         String dsPrefixs = env.getProperty(DB_CUSTOM_VALUE + "." + DB_NAME);         String[] var3 = dsPrefixs.split(",");         int var4 = var3.length;          for(int var5 = 0; var5 &lt; var4; ++var5) {             String dsPrefix = var3[var5];             Map&lt;String, Object&gt; dsMap = new HashMap();             dsMap.put("type", env.getProperty(DB_CUSTOM_VALUE + "." + dsPrefix + ".type"));             dsMap.put("driver-class-name", env.getProperty(DB_CUSTOM_VALUE + "." + dsPrefix + ".driver-class-name"));             dsMap.put("url", env.getProperty(DB_CUSTOM_VALUE + "." + dsPrefix + ".url"));             dsMap.put("username", env.getProperty(DB_CUSTOM_VALUE + "." + dsPrefix + ".username"));             dsMap.put("password", env.getProperty(DB_CUSTOM_VALUE + "." + dsPrefix + ".password"));             DataSource ds = this.buildDataSource(dsMap,env);             this.customDataSources.put(dsPrefix, ds);         }     }      private void initDefaultDataSource(Environment env) {          HashMap&lt;String, Object&gt; dsMap = new HashMap&lt;&gt;();         dsMap.put("type", env.getProperty(DB_DEFAULT_VALUE + ".type"));         dsMap.put("driver-class-name", env.getProperty(DB_DEFAULT_VALUE + ".driver-class-name"));         dsMap.put("url", env.getProperty(DB_DEFAULT_VALUE + ".url"));         dsMap.put("username", env.getProperty(DB_DEFAULT_VALUE + ".username"));         dsMap.put("password", env.getProperty(DB_DEFAULT_VALUE + ".password"));         //创建数据源         defaultDataSource = buildDataSource(dsMap, env);     }      private DataSource buildDataSource(Map&lt;String, Object&gt; dsMap,Environment env) {         Object type = dsMap.get("type");         if (type == null) {             type = DATASOURCE_TYPE_DEFAULT;         }         Class&lt;? extends DataSource&gt; dataSourceType;         try {             dataSourceType = (Class&lt;? extends DataSource&gt;) Class.forName((String) type);             String driverClassName = dsMap.get("driver-class-name").toString();             String url = dsMap.get("url").toString();             String username = dsMap.get("username").toString();             String password = dsMap.get("password").toString();              DruidDataSource dataSource = new DruidDataSource();             dataSource.setUrl(url);             dataSource.setUsername(username);             dataSource.setPassword(password);             dataSource.setDriverClassName(driverClassName);              dataSource.setInitialSize(Integer.valueOf(env.getProperty(DB_COMMON_VALUE + ".initialSize")));             dataSource.setMinIdle(Integer.valueOf(env.getProperty(DB_COMMON_VALUE + ".minIdle")));             dataSource.setMaxActive(Integer.valueOf(env.getProperty(DB_COMMON_VALUE + ".maxActive")));             dataSource.setMaxWait(Integer.valueOf(env.getProperty(DB_COMMON_VALUE + ".maxWait")));             dataSource.setTimeBetweenEvictionRunsMillis(Integer.valueOf(env.getProperty(DB_COMMON_VALUE + ".timeBetweenEvictionRunsMillis")));             dataSource.setMinEvictableIdleTimeMillis(Long.valueOf(env.getProperty(DB_COMMON_VALUE + ".minEvictableIdleTimeMillis")));             dataSource.setTestWhileIdle(Boolean.valueOf(env.getProperty(DB_COMMON_VALUE + ".testWhileIdle")));             dataSource.setTestOnBorrow(Boolean.valueOf(env.getProperty(DB_COMMON_VALUE + ".testOnBorrow")));             dataSource.setTestOnReturn(Boolean.valueOf(env.getProperty(DB_COMMON_VALUE + ".testOnReturn")));             dataSource.setDefaultAutoCommit(Boolean.valueOf(env.getProperty(DB_COMMON_VALUE + ".defultAutoCommint")));             dataSource.setValidationQuery("SELECT 1");             return dataSource;           } catch (ClassNotFoundException ex) {             logger.error(ex.getMessage(), ex);         }         return null;     }      @Override     public void registerBeanDefinitions(AnnotationMetadata annotationMetadata, BeanDefinitionRegistry registry) {         Map&lt;Object, Object&gt; targetDataSources = new HashMap();         targetDataSources.put("dataSource", this.defaultDataSource);         DynamicDataSourceContextHolder.dataSourceIds.add("dataSource");         targetDataSources.putAll(this.customDataSources);         Iterator var4 = this.customDataSources.keySet().iterator();          while(var4.hasNext()) {             String key = (String)var4.next();             DynamicDataSourceContextHolder.dataSourceIds.add(key);         }          GenericBeanDefinition beanDefinition = new GenericBeanDefinition();         beanDefinition.setBeanClass(DynamicDataSource.class);         beanDefinition.setSynthetic(true);         MutablePropertyValues mpv = beanDefinition.getPropertyValues();         mpv.addPropertyValue("defaultTargetDataSource", this.defaultDataSource);         mpv.addPropertyValue("targetDataSources", targetDataSources);         registry.registerBeanDefinition("dataSource", beanDefinition);         logger.info("Dynamic DataSource Registry");     } }</code></pre> <p>4、将DynamicDataSourceRegister 注册类交由启动类加载</p> <pre><code>@SpringBootApplication @Import(DynamicDataSourceRegister.class) public class DynamicDatasourceApplication {      public static void main(String[] args) {         SpringApplication.run(DynamicDatasourceApplication.class, args);     }  }</code></pre> <p>5、定义DynamicDataSourceContextHolder类来保存所有用到数据库和每个线程所使用到数据库</p> <pre><code>public class DynamicDataSourceContextHolder {     /**      * 保存每个线程对应数据信息      */     private static final ThreadLocal&lt;String&gt; contextHolder = new ThreadLocal&lt;&gt;();     /**      * 保存所有数据库的信息      */     public static List&lt;String&gt; dataSourceIds = new CopyOnWriteArrayList&lt;&gt;();      public static void setContextHolder(String dataSource){         contextHolder.set(dataSource);     }       public static String getContextHolder(){         return contextHolder.get();     }      public static  boolean isContainsDatasource(String dataSourceId){         return dataSourceIds.contains(dataSourceId);     } //这里在使用完数据库进行.remove()防止内存泄漏从而导致内存溢出     public static void clearDataSourceType(){         contextHolder.remove();     }   }</code></pre> <p>6、定义DynamicDataSource来切换数据库</p> <pre><code>public class DynamicDataSource extends AbstractRoutingDataSource {     @Override     protected Object determineCurrentLookupKey() {         return DynamicDataSourceContextHolder.getContextHolder();     } }</code></pre> <p>7、定义注解TargetDataSource 来实现，对数据库指定</p> <pre><code>@Target(ElementType.METHOD) @Retention(RetentionPolicy.RUNTIME) @Documented public @interface TargetDataSource {     String name(); }</code></pre> <p>8、定义切面对使用到这个注解的方法前后对用DynamicDataSourceContextHolder 保存和移除每个线程所使用到的数据库信息。之所以要用完移除主要是防止内存泄漏从而导致的内存溢出。</p> <pre><code>@Aspect //保证该aop在@Transaction之前执行 @Order(-1) @Component public class DynamicDataSourceAspect {     private static final Logger logger = LoggerFactory.getLogger(DynamicDataSourceAspect.class);      public DynamicDataSourceAspect() {     }      @Before("@annotation(ds)")     public void changeDataSource(JoinPoint point, TargetDataSource ds) throws Throwable {         String dsId = ds.name();         if (!DynamicDataSourceContextHolder.isContainsDatasource(dsId)) {             logger.error("数据源[{}]不存在，使用默认数据源 &gt; {}", ds.name(), point.getSignature());         } else {             logger.debug("Use DataSource : {} &gt; {}", dsId, point.getSignature());             DynamicDataSourceContextHolder.setContextHolder(dsId);         }      }      @After("@annotation(ds)")     public void restoreDataSource(JoinPoint point, TargetDataSource ds) {         logger.debug("Revert DataSource : {} &gt; {}", ds.name(), point.getSignature());         DynamicDataSourceContextHolder.clearDataSourceType();     } }</code></pre> <p>9、测试（以下为测试内容）</p> <pre><code>package com.yin.dynamic_datasource.controller;  import com.yin.dynamic_datasource.dto.AreaDto; import com.yin.dynamic_datasource.service.DynamicService; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.boot.web.servlet.ServletComponentScan; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.Mapping; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RestController;  /**  * @author yin  * @Date 2020/1/28 10:35  * @Method  */ @RestController @RequestMapping("/dynamic/test")  public class DynamicController {     @Autowired     private DynamicService dynamicService;      @GetMapping("/insert/default")     public AreaDto insertDefault(){         AreaDto areaDto = new AreaDto();         areaDto.setArea("defaultArea1");         areaDto.setAreaId("defaultId1");         areaDto.setCityid("defaultCityId1");         dynamicService.insertDefaultArea(areaDto);         return areaDto;     }      @GetMapping("/insert/custom1")     public AreaDto insertCustom1(){         AreaDto areaDto = new AreaDto();         areaDto.setArea("custom1Area1");         areaDto.setAreaId("custom1Id1");         areaDto.setCityid("custom1CityId1");         dynamicService.insertCustom1Area(areaDto);         return areaDto;     }  }</code></pre> <p>service</p> <pre><code>public interface DynamicService {     void insertArea(AreaDto areaDto);      void insertDefaultArea(AreaDto areaDto);      void insertCustom1Area(AreaDto areaDto); }</code></pre> <p>serviceImpl</p> <pre><code>@Service public class DynamicServiceImpl implements DynamicService {     @Autowired     private DynamicMapper dynamicMapper;      @Override     public void insertArea(AreaDto areaDto) {         dynamicMapper.insertArea(areaDto);     }      @Override     public void insertDefaultArea(AreaDto areaDto) {         dynamicMapper.insertArea(areaDto);     }      @Override     @TargetDataSource(name = "custom1")     public void insertCustom1Area(AreaDto areaDto) {         dynamicMapper.insertArea(areaDto);     } }</code></pre> <p>mapper.xml</p> <pre><code>&lt;?xml version="1.0" encoding="UTF-8" ?&gt; &lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" &gt; &lt;mapper namespace="com.yin.dynamic_datasource.dao.DynamicMapper"&gt;      &lt;!-- 插入记录--&gt;     &lt;insert id="insertArea" useGeneratedKeys="true" keyProperty="id"             parameterType="com.yin.dynamic_datasource.dto.AreaDto"&gt;  		  INSERT INTO tb_areas(areaid, area, cityid) values (#{areaId}, #{area}, #{cityid})      &lt;/insert&gt;   &lt;/mapper&gt;</code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-54784.htm">中国宠物粮生产企业排名（宠物粮公司排名）</a></p>
                                        <p>下一个：<a href="/news/article-55350.htm">宠物店的宠物从哪进货便宜（宠物店都是在哪里进货）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-26667.htm" title="重庆狗狗领养（重庆狗狗领养中心）">重庆狗狗领养（重庆狗狗领养中心）</a></li>
                        <li class="py-2"><a href="/news/article-29460.htm" title="2022公务员国考报名流程（国家公务员国考报名）">2022公务员国考报名流程（国家公务员国考报名）</a></li>
                        <li class="py-2"><a href="/news/article-31837.htm" title="如何过滤掉MySQL返回的结果集的行中的重复项？">如何过滤掉MySQL返回的结果集的行中的重复项？</a></li>
                        <li class="py-2"><a href="/news/article-22959.htm" title="宠物医院诊疗许可证要求是什么样的（宠物诊所诊疗许可证申请条件）">宠物医院诊疗许可证要求是什么样的（宠物诊所诊疗许可证申请条件）</a></li>
                        <li class="py-2"><a href="/news/article-22501.htm" title="我想开宠物店（我想开宠物店怎么申请）">我想开宠物店（我想开宠物店怎么申请）</a></li>
                        <li class="py-2"><a href="/news/article-23406.htm" title="动物防疫疫苗与接种的关系是什么（动物疫苗的重要性）">动物防疫疫苗与接种的关系是什么（动物疫苗的重要性）</a></li>
                        <li class="py-2"><a href="/news/article-51059.htm" title="三国杀拥有限定技的武将（三国杀里的限定技是什么）">三国杀拥有限定技的武将（三国杀里的限定技是什么）</a></li>
                        <li class="py-2"><a href="/news/article-51577.htm" title="Tensorflow迁移学习加载预训练模型并修改变量shape和value的方法">Tensorflow迁移学习加载预训练模型并修改变量shape和value的方法</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-30-node-share.htm" title="11月30日→21.4M/S|2024年最新免费节点QuantumultX Free订阅链接地址">11月30日→21.4M/S|2024年最新免费节点QuantumultX Free订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-11-free-node-subscribe.htm" title="11月11日→21.6M/S|2024年最新免费节点QuantumultX Free订阅链接地址">11月11日→21.6M/S|2024年最新免费节点QuantumultX Free订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">42</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
       <div class="footer-bottom">
        <div class="container">
            <div class="row justify-content-center align-items-center">
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <p class="copyright-line">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <a href="/">QuantumultX Free免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <p class="privacy">Privacy Policy | Terms &amp; Conditions</p>
                </div>
            </div>
        </div>
    </div>
    <!-- Scroll Top Area -->
    <a href="#top" class="go-top"><i class="las la-angle-up"></i></a>
    <!-- Popper JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/popper.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/bootstrap.min.js"></script>
    <!-- Wow JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/wow.min.js"></script>
    <!-- Way Points JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.waypoints.min.js"></script>
    <!-- Counter Up JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.counterup.min.js"></script>
    <!-- Owl Carousel JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/owl.carousel.min.js"></script>
    <!-- Magnific Popup JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/magnific-popup.min.js"></script>
    <!-- Sticky JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.sticky.js"></script>
    <!-- Progress Bar JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/jquery.barfiller.js"></script>
    <!-- Main JS -->
    <script src="/assets/website/js/frontend/quantumultxfree/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>